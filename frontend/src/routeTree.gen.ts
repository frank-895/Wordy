/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TemplatesRouteImport } from './routes/templates'
import { Route as EditorRouteImport } from './routes/editor'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TemplatesIndexRouteImport } from './routes/templates/index'
import { Route as TemplatesTemplateIdRouteImport } from './routes/templates/$templateId'

const TemplatesRoute = TemplatesRouteImport.update({
  id: '/templates',
  path: '/templates',
  getParentRoute: () => rootRouteImport,
} as any)
const EditorRoute = EditorRouteImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesIndexRoute = TemplatesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TemplatesRoute,
} as any)
const TemplatesTemplateIdRoute = TemplatesTemplateIdRouteImport.update({
  id: '/$templateId',
  path: '/$templateId',
  getParentRoute: () => TemplatesRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/editor': typeof EditorRoute
  '/templates': typeof TemplatesRouteWithChildren
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/templates/': typeof TemplatesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/editor': typeof EditorRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/templates': typeof TemplatesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/editor': typeof EditorRoute
  '/templates': typeof TemplatesRouteWithChildren
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/templates/': typeof TemplatesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/editor'
    | '/templates'
    | '/templates/$templateId'
    | '/templates/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/editor' | '/templates/$templateId' | '/templates'
  id:
    | '__root__'
    | '/'
    | '/editor'
    | '/templates'
    | '/templates/$templateId'
    | '/templates/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EditorRoute: typeof EditorRoute
  TemplatesRoute: typeof TemplatesRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/templates': {
      id: '/templates'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/': {
      id: '/templates/'
      path: '/'
      fullPath: '/templates/'
      preLoaderRoute: typeof TemplatesIndexRouteImport
      parentRoute: typeof TemplatesRoute
    }
    '/templates/$templateId': {
      id: '/templates/$templateId'
      path: '/$templateId'
      fullPath: '/templates/$templateId'
      preLoaderRoute: typeof TemplatesTemplateIdRouteImport
      parentRoute: typeof TemplatesRoute
    }
  }
}

interface TemplatesRouteChildren {
  TemplatesTemplateIdRoute: typeof TemplatesTemplateIdRoute
  TemplatesIndexRoute: typeof TemplatesIndexRoute
}

const TemplatesRouteChildren: TemplatesRouteChildren = {
  TemplatesTemplateIdRoute: TemplatesTemplateIdRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
}

const TemplatesRouteWithChildren = TemplatesRoute._addFileChildren(
  TemplatesRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EditorRoute: EditorRoute,
  TemplatesRoute: TemplatesRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
